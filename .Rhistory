#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#importing relevant libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggmap)
library(scales)
#setting seed to ensure that randomized calculations are constant
set.seed(50)
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9, 99, and 999 (NA codes) from rows that do not contain true 9's
rows = full[, -c(3, 5, 21, 23, 24, 32, 33, 34, 36, 38)]
rows[rows == "9"] = NA
rows[rows == "99"] = NA
rows[rows == "999"] = NA
full[, -c(3, 5, 21, 23, 24, 32, 33, 34, 36, 38)] = rows
full[full == ""] = NA
#cols <- c("A", "C", "D", "H")
#data[cols] <- lapply(data[cols], factor)
#full[full == "no"] = 0
#full[full == "yes"] = 1
summary(full)
full = droplevels(full)
summary(full)
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9, 99, and 999 (NA codes) from rows that do not contain true 9's
rows = full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)]
rows[rows == "9"] = NA
rows[rows == "99"] = NA
rows[rows == "999"] = NA
full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)] = rows
full[full == ""] = NA
full = droplevels(full)
#cols <- c("A", "C", "D", "H")
#data[cols] <- lapply(data[cols], factor)
#full[full == "no"] = 0
#full[full == "yes"] = 1
summary(full)
names(full)
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9 from rows that do not contain true 9's
rows = full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)]
rows[rows == "9"] = NA
full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)] = rows
#removing 99, 999 (NA codes)
full[full == "99"] = NA
full[full == "999"] = NA
full[full == ""] = NA
full = droplevels(full)
#cols <- c("A", "C", "D", "H")
#data[cols] <- lapply(data[cols], factor)
#full[full == "no"] = 0
#full[full == "yes"] = 1
summary(full)
full[full == "no"] = "0"
summary(full)
full[] <- lapply(full, as.character)
View(full)
typeof(full$childrenborn)
names(full)
names(full[, c(3:18, 21:22, 24:26))
names(full[, c(3:18, 21:22, 24:26)])
head(full[, c(3:18, 21:22, 24:26)])
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9 from rows that do not contain true 9's
rows = full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)]
rows[rows == "9"] = NA
full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)] = rows
#removing 99, 999 (NA codes)
full[full == "99"] = NA
full[full == "999"] = NA
full[full == ""] = NA
full = droplevels(full)
#in binary variables, removing "not a dejure resident", since there is a variable containing that information, and it is redundant. Converting everything to binary where applicable
full[, c(3:18, 21:22, 24:26)] <- lapply(full[, c(3:18, 21:22, 24:26)], as.character)
full[full == "no"] = "0"
full[full == "yes"] = "1"
View(full)
names(full)
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9 from rows that do not contain true 9's
rows = full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)]
rows[rows == "9"] = NA
full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)] = rows
#removing 99, 999 (NA codes)
full[full == "99"] = NA
full[full == "999"] = NA
full[full == ""] = NA
full = droplevels(full)
#in binary variables, removing "not a dejure resident", since there is a variable containing that information, and it is redundant. Converting everything to binary where applicable
full[, c(5:11, 24)] <- lapply(full[, c(5:11, 24)], as.character)
full[full == "no"] = "0"
full[full == "yes"] = "1"
full[, c(5:11, 24)] <- lapply(full[, c(5:11, 24)], as.numeric)
View(full)
mean(full$teleph)
mean(full$teleph, na.rm = TRUE)
mean(full$tv, na.rm = TRUE)
summary(full$teleph)
summary(full$tv)
x = glm(inf_death~wealthindex, data = full, family = binomial(link='logit'))
summary(x)
logodds = function(x) {return(exp(x)/(1+exp(x)))}
logodds(-1.12546)
logodds(-1.471)
log(0.23)
exp(1.80)
74/91
17/91
32/109
logodds(-1.47+0.59)
x = glm(inf_death~wealthindex, data = full, family = binomial(link='logit'))
summary(x)
logodds(-2.41)
logodds(-2.41 + (-0.24*2))
logodds(-2.41 + (-0.24*(-3)))
mean(full$inf_death)
logodds(-2.41673)
logodds(-2.4)
View(full)
summary(full$wealthindex)
logodds(-2.41 + (-0.24*(2.8)))
logodds(-2.41 + (-0.24*(-1.6)))
names(full)
View(babies)
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
View(babies)
#importing file, removing column of ids
data = as.data.frame(fread("MotherData.csv", stringsAsFactors = TRUE))
#splitting data to mother related data and baby related data
mothers = data[, c(1:78, 439:ncol(data))]
babies = data[, c(1, 79:438)]
#converting baby data to long format and renaming columns
babies = reshape(babies, varying = names(babies[, -1]), sep = "_", direction = "long")
babies = select(babies, caseid, bord, b0, b1, b2, b7, b9, b4)
names(babies) = c("caseid", "bord", "twin", "month", "year", "months_lived", "lives_with", "gender")
#removing lines for mothers that didn't have a baby
babies = babies[complete.cases(babies[, "bord"]), ]
#creating dummy variable for babies who die before reaching one year
babies$inf_death = as.numeric(babies$months_lived < 12)
#setting inf_death to 0 for babies that are still alive
babies[is.na(babies$inf_death), "inf_death"] = 0
#selecting relevant mother data
mothers = select(mothers, caseid, v005, v113, v116, v119,
v120, v121, v122, v123, v124, v125, v127, v128, v129, v130, v131, v133,
v135, v136, v137, v150, v151, v152, v153, v155, v161, v191, v201, v212)
#renaming to help interpret results
names(mothers) = c("caseid", "samp_weight", "water", "toilet", "electricity", "radio", "tv", "fridge",
"bike", "motorcycle", "car", "floor", "walls", "roof", "religion", "ethnicity",
"education", "usual", "housemem", "housechild","reltohead", "sexhead", "agehead",
"teleph", "literacy", "cookingfuel", "wealthindex", "childrenborn", "agefirstbirth")
full = merge(mothers, babies)
#removing 9 from rows that do not contain true 9's
rows = full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)]
rows[rows == "9"] = NA
full[, -c(2, 4, 20, 22, 23, 31, 32, 33, 35, 37)] = rows
#removing 99, 999 (NA codes)
full[full == "99"] = NA
full[full == "999"] = NA
full[full == ""] = NA
full = droplevels(full)
#in binary variables, removing "not a dejure resident", since there is a variable containing that information, and it is redundant. Converting everything to binary where applicable
#converting factors to characters so they are editable
full[, c(5:11, 24)] <- lapply(full[, c(5:11, 24)], as.character)
full[full == "no"] = "0"
full[full == "yes"] = "1"
#converting characters to numeric
full[, c(5:11, 24)] <- lapply(full[, c(5:11, 24)], as.numeric)
View(full)
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity+education+usual+housemem+sexhead+agehead+literacy+cookingfuel+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio, data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor, data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity, data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity+education+usual+housemem+sexhead, data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity+education+usual, data = full, family = binomial(link='logit'))
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity+education, data = full, family = binomial(link='logit'))
summary(full$usual)
m_full = glm(inf_death~water+toilet+electricity+radio+tv+fridge+bike+motorcycle+car+teleph+floor+walls+roof+religion+ethnicity+education+housemem+sexhead+agehead+literacy+cookingfuel+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_full)
m_full = glm(inf_death~electricity+radio+tv+fridge+bike+motorcycle+car+teleph+education+housemem+literacy+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_full)
m_full = glm(inf_death~literacy+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_full)
m_full = glm(inf_death~wealthindex+education+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_full)
full[1:5, ]
full[1:5, c(1, 6, 10, 15, 16, 20, 21, 23, 24, 26, 28)]
full[1:5, c(1, 6, 10, 15, 16, 20, 21, 23, 24, 26, 27, 30,36)]
full[1:5, c(1, 6, 10, 15, 16, 21, 23, 24, 26, 27, 30,36)]
m_wealth = glm(inf_death~wealthindex, data = full, family = binomial(link='logit'))
logodds = function(x) {return(exp(x)/(1+exp(x)))}
m_full = glm(inf_death~electricity+radio+tv+fridge+bike+motorcycle+car+teleph+education+housemem+literacy+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
m_full
full[1:5, c(1, 6, 10, 15, 16, 21, 23, 24, 26, 27, 30,36)]
full[1:5, c(1, 27, 30,36)]
full[1:5, c(1, 27, 30, 35, 36)]
full[c(3, 10, 234, 499), c(1, 27, 30, 35, 36)]
full[c(3, 10, 32, 234, 499), c(1, 27, 30, 35, 36)]
summary(m_wealth)
m_wealth
m_wealth$coefficients
m_wealth$coefficients$Intercept
m_wealth$coefficients[1]
m_full = glm(inf_death~electricity+radio+tv+fridge+bike+motorcycle+car+teleph+education+housemem+literacy+wealthindex+(wealthindex*education)+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_rull)
summary(m_ull)
summary(m_full)
summary(glm(inf_death~wealthindex+gender+(gender*wealthindex), data = full, family = binomial(link='logit')))
summary(glm(inf_death~education+housemem+wealthindex+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit')))
logodds(-0.24971*3)
logodds(-0.24971*1.5)
logodds(-0.24971*1)
m_full$coefficients
summary(m_full$coefficients)
m_full
summary(m_full)
m_full = glm(inf_death~education+housemem+wealthindex+agefirstbirth+bord+gender+(gender*wealthindex), data = full, family = binomial(link='logit'))
summary(m_full)
summary(m_full)$Coefficients
summary(m_full)$coefficients
summary(m_full)$coefficients
